(defun RotatePoint (point rotation_angle / x y cos1 sin1 x1 y1)
	(setq x (car point))
	(setq y (cadr point))
	(setq cos1 (cos rotation_angle))
	(setq sin1 (sin rotation_angle))
	(setq x1 (- (* x cos1) (* y sin1)))
	(setq y1 (+ (* x sin1) (* y cos1)))
	(list x1 y1)
)
(defun BuildPoints(point_count / rotation_angle points current_point)
	(setq rotation_angle (/ (* 2 PI) point_count))
	(setq points '())
	(setq current_point '(1 0))
	(repeat point_count
		(setq points (cons current_point points))
		(setq current_point (RotatePoint current_point rotation_angle))
	)
	points
)
(defun LeftEach (points idx / points2 index)
	(setq points2 '())
	(setq index 0)
	(foreach point points
		(if (zerop (rem index connect_each)) (setq points2 (cons point points2)))
		(setq index (+ index 1))
	)
	points2
)

(defun ScalePoint (point radius) (list (* (car point) radius) (* (cadr point) radius)))
(defun PreparePoint (point radius height) (cons height (ScalePoint point radius)))
(defun Connect (points height1 height2 radius1 radius2 / iteration point1 point2)
	(foreach point points
		(setq point1 (PreparePoint point radius1 height1))
		(setq point2 (PreparePoint point radius2 height2))
		(command "_line" point1 point2 "")
	)
	(princ)
)
(defun DrawCircle (points radius height)
	(setq points (cons (last points) points))
	(setq prepare (lambda (point) (PreparePoint point radius height)))
	(setq points (mapcar 'prepare points))
	(command "_line" (foreach pt points (command pt)))
	(princ)
)
(defun DrawPyramid (points edge_count height radius / connect_each)
	(setq connect_each (/ (length points) edge_count))
	(setq points (LeftEach points connect_each))
	(Connect points 0 height 0 radius)
	(setq layer_count 5)
	(setq height_step (/ height (- layer_count 1)))
	(setq radius_step (/ radius (- layer_count 1)))
	(setq height 0)
	(setq radius 0)
	(repeat layer_count
		(DrawCircle points radius height)
		(setq height (+ height height_step))
		(setq radius (+ radius radius_step))
	)
	points
)
(defun DrawCylinder (points radius height start_height)
	(Connect points start_height (+ start_height height) radius radius)
	(setq layer_count 5)
	(setq height_step (/ height (- layer_count 1)))
	(repeat layer_count
		(DrawCircle points radius start_height)
		(setq start_height (+ start_height height_step))
	)
	(princ)
)
(defun DrawSphere (points radius height start_height / layer_count height_step GetRadius last_height next_height last_radius next_radius)
	(setq layer_count 5)
	(setq height_step (/ height (- layer_count 1)))
	
	(setq GetRadius (lambda (h) (sqrt (- (* radius radius) (* h h)))))
	
	(DrawCircle points radius start_height)
	(setq last_height start_height)
	(repeat layer_count
		(setq next_height (- last_height height_step))
		
		(setq last_radius (GetRadius (- start_height last_height)))
		(setq next_radius (GetRadius (- start_height next_height)))
		
		(DrawCircle points next_radius next_height)
		(Connect points next_height last_height next_radius last_radius)
		
		(setq last_height next_height)
	)
	(Connect points last_height last_height 0 next_radius)
	(princ)
)

(defun start()
	(setq points (BuildPoints 90))

	(setq pyramid_edge_count 9)
	(setq pyramid_height 1000)
	(setq pyramid_radius 400)
	(setq pyramid_points (DrawPyramid points pyramid_edge_count pyramid_height pyramid_radius))
	
	(setq cylinder_height 450)
	(setq cylinder_radius 450)
	(setq cylinder_side_size (/ (length points) pyramid_edge_count))
	(setq cylinder_edge_count (* pyramid_edge_count cylinder_side_size))
	(setq cylinder_start_height pyramid_height)
	(Connect pyramid_points pyramid_height cylinder_start_height pyramid_radius cylinder_radius)
	(DrawCylinder points cylinder_radius cylinder_height cylinder_start_height)
	
	(setq sphere_radius 450)
	(setq sphere_height 450)
	(setq sphere_edge_count cylinder_edge_count)
	(setq sphere_start_height (+ pyramid_height cylinder_height))
	(Connect points sphere_start_height sphere_start_height cylinder_radius sphere_radius)
	(DrawSphere points sphere_radius sphere_height sphere_start_height)
)
(start)